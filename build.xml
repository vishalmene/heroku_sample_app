<?xml version="1.0" encoding="UTF-8"?> 

<project name="Heroku" default="build">                    
  <property name="composer.path" value="${basedir}/composer.phar" />
  <available property="composer.exists" file="${composer.path}" />
  <property name="workspace" value="${basedir}" />
  <property name="sourcedir" value="${basedir}/src" />
  <property name="builddir" value="${workspace}/app/build" />
  <property environment="env"/>
  <target name="build"
  depends="prepare,vendors,parameters,lint,phpcpd,phpcs-ci,phpcb,deploy,phpunit"/>
  <target name="build-parallel" depends="prepare,lint,tools-parallel,phpcb,deploy,phpunit"/>

  <target name="tools-parallel" description="Run tools in parallel">
    <parallel threadCount="2">
      <antcall target="phpcpd"/>
      <antcall target="phpcs-ci"/>
    </parallel>
  </target>

  <target name="clean" description="Cleanup build artifacts">
    <delete dir="${builddir}/api"/>
    <delete dir="${builddir}/api"/>
    <delete dir="${builddir}/code-browser"/>
    <delete dir="${builddir}/coverage"/>
    <delete dir="${builddir}/logs"/>
  </target>

  <target name="prepare" depends="clean" description="Prepare for build">
    <mkdir dir="${builddir}/api"/>
    <mkdir dir="${builddir}/code-browser"/>
    <mkdir dir="${builddir}/coverage"/>
    <mkdir dir="${builddir}/logs"/>
  </target>

  <target name="lint" description="Perform syntax check of sourcecode files">
    <apply executable="php" failonerror="true">
    <arg value="-l" />
    <fileset dir="${sourcedir}">
      <include name="**/*.php" />
      <modified />
    </fileset>
    <fileset dir="${basedir}/src/">
      <include name="**/*Test.php" />
      <modified />
    </fileset>
    </apply>
  </target>

  <target name="phpcs" description="Find coding standard violations using PHP_CodeSniffer and print human readable output. Intended for usage on the command line before committing.">
    <exec executable="/usr/local/bin/phpcs">
      <arg value="--standard=PSR2" />
      <arg path="${sourcedir}" />
    </exec>
  </target>

  <target name="phpcs-ci" description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">
    <exec executable="/usr/local/bin/phpcs">
      <arg value="--report=checkstyle" />
      <arg value="--report-file=${builddir}/logs/checkstyle.xml" />
      <arg value="--standard=PSR2" />
      <arg path="${sourcedir}" />
    </exec>
  </target>

  <target name="phpcpd" description="Find duplicate code using PHPCPD">
    <exec executable="/usr/local/bin/phpcpd">
      <arg value="--log-pmd" />
      <arg value="${builddir}/logs/pmd-cpd.xml" />
      <arg path="${sourcedir}" />
    </exec>
  </target>

  <target name="phpcb" description="Aggregate tool output with PHP_CodeBrowser">
    <exec executable="/usr/local/bin/phpcb">
      <arg value="--log" />
      <arg path="${builddir}/logs" />
      <arg value="--source" />
      <arg path="${sourcedir}" />
      <arg value="--output" />
      <arg path="${builddir}/code-browser" />
    </exec>
  </target>
  
  <target name="vendors" depends="composer">
    <exec executable="${basedir}/composer.phar" failonerror="true">
     <arg value="install" />
    </exec>
  </target>

  <target name="composer" unless="composer.exists">
   <get src="http://getcomposer.org/composer.phar" dest="${composer.path}" />
    <chmod file="${composer.path}" perm="775" />
  </target>

  <target name="deploy">
    <echo message="Deploying code on Heroku" />
    <exec dir="/var/lib/jenkins/Heroku" executable="/var/lib/jenkins/Heroku/heroku_create_app" failonerror="true">
    </exec>
  </target>

  <target name="phpunit" depends="deploy">
    <echo message="Pulling logs for phpunit" />
    <get src="https://ib-heroku.herokuapp.com/uploads/junit.xml" dest="${builddir}/logs/junit.xml"/>
    <untar src="https://ib-heroku.herokuapp.com/uploads/coverage.tar.gz" dest="${builddir}/"/>
  </target>
</project>
